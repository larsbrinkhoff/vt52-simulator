VT50 SYMBOLS AND MICRO-PROGRAM	MACRO V06-03 27-JAN-75 13:32 PAGE 2


1 000000        START:	.AD	UART	;NO-OP AT POWER-UP TIME
2 000002 000132		M1!U2M		;CLEAR UAR AND GET IN MODE 1
3 000004 000010		ZXZY
4 000006 000160 PULP:	ZY
5 000010 000114		ZA!DY		;GET LAST ROW IN RAM
6 000012 000022		A2M		;CLEAR THE LOCATION
7 000014 000114		ZA!DY		;GET NEXT ROW
8 000016 000022		A2M
9 000020 000114		ZA!DY
10 00022 000073		IX!L40M!ADXJ	;GET NEXT COLUMN
11 00024		.AD	PULP	;DO ANOTHER COLUMN IF NOT FINISHED
12 00026 000014 CRTN:	ZXZY!DXDY	;CARRIAGE RETURN ROUTIN
13 00030 000114		DY!ZA
14 00032 000114 CRTN2:	DY!ZA		;GET CUR-X LOCATION
15 00034 000023 CRTN3:	A2M!AEMJ	;CLEAR IT
16 00036		.AD	JUMP
17 00040 000014 TAB:	ZXZY!DXDY	;DO A TAB, MODULO 8
18 00042 000050		IXDY
19 00044 000006		DXDY!M2A	;GET CUR-X
20 00046		.LD	110
21 00050 000041		ALMJ		;BEFORE LAST TAB-STOP ?
22 00052		.AD	TAB2	;YES-DO AN HONEST TO GOD TAB
23 00054 000131		M1!TRUJ		;NO-DO A CURSOR RIGHT INSTEAD
24 00056		.AD	CURT2	;OTHERWISE DO CURSOR RIGHT
25 00060 000030 UART:	X8
26 00062 000007		DXDY!M2A!URJ	;IS UART FLAG SET ?
27 00064		.AD	CHPROC	;YES GO PROCESS THE NEW CHARACTER
28 00066	ERASE:	.LD	15	;GET ERASE-COUNTER
29 00070 000045		IA2!ALMJ	;FINISHED ?

30 00072		.AD	ESS	;NO-GO ERASE ANOTHER LINE
31 00074 000074 SILSER: IX!IY		;GET LF-BUFFER
32 00076 000111		ZA!AEM2J	;IS IT CLEAR ?
33 00100		.AD	SIL1	;YES-GO CHECK SILO
34 00102		.LD	16
35 00104 000002		M2A
36 00106		.LD	0	;CLEAR BUFFER
37 00110 000104		DY		;GET SILO COUNT
38 00112 000041		ALMJ		;SILO OVERFLOW?
39 00114		.AD	SCRL2	;YES-DO A SCROLL
40 00116 000014		ZXZY!DXDY	;OTHERWISE TRY A LINEFEED
41 00120 000030		X8
42 00122 000006 LINEF:	DXDY!M2A	;GET SCREEN LINE
43 00124 		.LD	13
44 00126 000041		ALMJ		;ON LAST LINE ?
45 00130		.AD	CUDOWN	;NO-MOVE CURSOR DOWN
46 00132 000110		ZA
47 00134 000035		X8!IA!AEMJ	;IS HOLD SCREEN FF SET ?
48 00136		.AD	LINEF2
49 00140 000014 SCRL2:	ZXZY!DXDY
50 00142 000104		DY
51 00144 000152 SCROLL: ZX!M2B		;LOAD TOP LINE IN MABY
52 00146 000002		M2A
53 00150 000154		ZX!DX		;GET CUR-Y
54 00152 000022		A2M		;SET IT WITH TOP LINE
55 00154 000150		ZX		;GET TOP-LINE
56 00156		.LD	14
57 00160 000045		IA2!ALMJ	;INCREMENT IT MODULO 14
58 00162		.AD	5$
59 00164 000110		ZA
60 00166 000023 5$:	A2M!AEMJ
61 00170		.AD	ERASL	;JUMP TO ERASE LINE ROUTINE
62 00172 000006 LINEF2: DXDY!M2A	;GET SCROLL COUNT
63 00174 000164		DA		;DECREMENT IT
64 00176 000041		ALMJ		;ALREADY ZERO ?
65 00200		.AD	SCRL1	;NO-SCROLL

67 00202 000014 BUFF:	ZXZY!DXDY	;SET LF-BUFFER
67 00204 000071 IDENT:	IX!ADXJ		;SET IDENTIFIER TO TRANSMIT "ESC,\,A"
68 00206		.AD	HOLD4
69 00210 000023 SCRL1:	A2M!AEMJ
70 00212		.AD	SCRL2
71 00214 000006 EOS:	DXDY!M2A	;GET SCREEN LINE
72 00216 000070		IX		;GET EOS-COUNTER
73 00220 000026		IA!A2M		;SET IT WITH INCREMENTED SCREEN LINE
74 00222 000156		ZX!DX!M2B
75 00224 000002		M2A
76 00226 000004		DXDY		;GET EOS-LINE
77 00230 000022		A2M		;SET IT WITH CUR-Y
78 00232 000014		ZXZY!DXDY
79 00234 000104 EOL:	DY
80 00236 000156		ZX!DX!M2B	;GET LINE TO BE ERASE
81 00240 000104		DY
82 00242 000002		M2A		;GET CUR-X
83 00244 000071 5$:	IX!ADXJ		;DELAY LOOP
84 00246		.AD	5$
85 00250 000131 ERASL:	M1!TRUJ
86 00252		.AD	ERASL2
87 00254 000070 CHPROC: IX
88 00256 000111		ZA!AEM2J	;IS SILO SET ?
89 00260		.AD	CHPR2
90 00262 000002 LOADER: M2A		;GET SILO COUNT
91 00264 000026 LOAD1:	IA!A2M		;INCREMENT IT
92 00266 000144		DX
93 00270 000006		DXDY!M2A	;GET INPUT POINTER
94 00272 000026		IA!A2M		;INCREMENT IT
95 00274 000102		M2X
96 00276 000004		DXDY		;GET SILO LOCATION
97 00300 000137		M1!IROM!U2M!TRUJ ;LOAD CHARACTER IN SILO
98 00302		.AD VID
99 00304 000064 CHPR2:	IY		;GET LF-BUFFER
100 0306 000111		ZA!AEM2J	;IS IT SET ?
101 0310		.AD	CHPR3	;NO-PROCESS NEW CHARACTER

102 0312		.LD	23	
103 0314 000042		M2U		;TRANSMIT XOFF
104 0316 000115		DY!ZA!AEM2J	;UNCONDITIONAL JUMP
105 0320		.AD	LOAD1
106 0322 000132 CHPR3:	M1!U2M
107 0324 000075		IX!IY!ADXJ
108 0326		.AD	CHPR4
109 0330 000115 SIL1:	ZA!DY!AEM2J	;IS SILO SET ?
110 0332		.AD	SIL3	;NO-QUIT
111 0334 000045		IA2!ALMJ	;IS THIS LAST ITEM ?
112 0336		.AD	XONSK	;NO-SKIP XON ROUTINE
113 0340		.LD	21	;GET XON CODE
114 0342 000043		M2U!ALMJ	;TRANSMIT
115 0344		.AD	SIL2
116 0346 000002 XONSK:	M2A
117 0350 000164 SIL2:	DA		;DECREMENT SILO COUNT
118 0352 000022		A2M
119 0354 000006		DXDY!M2A	;GET OUTPUT POINTER
120 0356 000026		IA!A2M		;INCREMENT IT
121 0360 000102		M2X
122 0362 000006 CHPR4:	DXDY!M2A	;LOAD CHARACTER
123 0364		.LD	0	;CLEAR LOCATION
124 0366 000014		ZXZY!DXDY
125 0370 000034		IA!XB		;GET SCRATCH LOCATION
126 0372		.LD	41	;UPPER LIMIT FOR CONTROL CODES
127 0374 000041		ALMJ		;IS IT A CONTROL CODE ?
128 0376		.AD	CONTR
129 0400 000022		A2M		;STORE CODE
130 0402 000144		DX		;GET ESCAPE FF
131 0404 000111		ZA!AEM2J	;SET ?
132 0406		.AD	DISP	;NO-DISPLAY THIS CHARACTER
133 0410 000022		A2M		;CLEAR ESCAPE FF
134 0412 000070		IX
135 0414 000002		M2A		;GET ASCII CODE
136 0416		.LD	102
137 0420 000021		AEMJ		;IS IT A ?

138 0422		.AD	CURUP
139 0424		.LD	111
140 0426 000021		AEMJ		;IS IT H ?
141 0430		.AD	HOME
142 0432		.LD	104
143 0434 000021		AEMJ		;IS IT C ?
144 0436		.AD	CURRT
145 0440		.LD	135
146 0442 000021		AEMJ		;IS IT \ ?
147 0444		.AD	HOLDIS
148 0446 000025		IA!AEMJ		;IS IT [ ?
149 0450		.AD	HOLDEN
150 0452 000025		IA!AEMJ		;IS IT Z ?
151 0454		.AD	IDENT
152 0456		.LD	116
153 0460 000021		AEMJ		;IS IT K ?
154 0462		.AD	EOL
155 0464 000025		IA!AEMJ		;IS IT J ?
156 0466		.AD	EOS
157 0470 000135		M1!IROM!TRUJ
158 0472		.AD	VID
159 0474	CONTR:	.LD	13
160 0476 000021		AEMJ		;IS IT LF ?
161 0500		.AD	LINEF
162 0502 000025		IA!AEMJ		;IS IT TAB ?
163 0504		.AD	TAB
164 0506 000025		IA!AEMJ		;IS IT BSPACE ?
165 0510		.AD	BSPACE
166 0512 000025		IA!AEMJ		;IS IT BELL ?
167 0514		.AD	BELL
168 0516		.LD	37
169 0520 000021		AEMJ		;IS IT ESC ?
170 0522		.AD	ESCAPE
171 0524		.LD	21
172 0526 000021		AEMJ		;IS IT CR ?
173 0530		.AD	CRTN

174 0532 000135		M1!IROM!TRUJ
175 0534		.AD	VID	;CAN BE REPLACE BY A "DX"
176 0536 000144 ESCAPE: DX		;GET ESCAPE FF
177 0540 000111 ESCA2:	ZA!AEM2J	;IS IT SET ?
178 0542		.AD	CURT3	;NO-SET IT
179 0544 000023		A2M!AEMJ
180 0546		.AD	JUMP	;CLEAR IT
181 0550 000070 DISP:	IX
182 0552 000002		M2A		;GET CHARACTER TO BE DISPLAYED
183 0554 000164		DA		;COMPENSATE FOR PREVIOUS INCREMENT
184 0556 000104		DY
185 0560 000156		ZX!DX!M2B	;GET CUR-Y
186 0562 000106		DY!M2X		;GET CUR-X
187 0564 000040		B2Y		;GET CURSOR LOCATION
188 0566 000022		A2M		;LOAD CHARACTER
189 0570 000014 CURRT:	ZXZY!DXDY	;CURSOR RIGHT ROUTINE
190 0572 000050		IXDY		;GET CUR-X
191 0574 000006		DXDY!M2A
192 0576	CURT2:	.LD	117
193 0600 000021		AEMJ		;IN RIGHT MARGIN?
194 0602		.AD	JUMP	;EXIT-VT50 DOES NOT WRAP THE CURSOR
195 0604 000027 CURT3:	IA!A2M!AEMJ	;INCREMENT IT
196 0606		.AD	JUMP
197 0610 000004 HOME:	DXDY		;GET SCREEN LINE
198 0612		.LD	0	;CLEAR IT
199 0614 000150		ZX		;GET TOP LINE
200 0616 000074		IX!IY
201 0620 000006 SIL3:	DXDY!M2A
202 0622 000144		DX
203 0624 000023		A2M!AEMJ	;LOAD IT WITH TOP LINE
204 0626		.AD	CRTN2
205 0630 000004 CURUP:	DXDY		;GET SCREEN LINE
206 0632 000111		ZA!AEM2J	;IS IT 0 ?
207 0634		.AD	JUMP
208 0636 000002		M2A
209 0640 000164		DA

210 0642 000023		A2M!AEMJ	;DECREMENT IT
211 0644		.AD	DECR
212 0646 000114 BSPACE:	DY!ZA
213 0650 000114		DY!ZA		;GET CUR-X
214 0652 000031		X8!AEMJ		;IN LEFT MARGIN?
215 0654		.AD	JUMP	;YES-QUIT
216 0656 000154 DECR:	ZX!DX
217 0660 000002		M2A		;LOAD CUR-X
218 0662 000164		DA		;DECREMENT IT
219 0664 000041		ALMJ
220 0666		.AD	CRTN3
221 0670		.LD	13
222 0672 000135 JUMP:	M1!IROM!TRUJ
223 0674		.AD	VID	;JUMP TO NEXT PAGE
224 0676 000004 HOLDEN:	DXDY
225 0700 000110		ZA
226 0702 000036		X8!IA!A2M	;SET HOLD SCREEN FF
227 0704 000030		X8		;AND CLEAR SCROLL COUNT
228 0706 000114 HOLDIS:	ZA!DY
229 0710 000144 BELL:	DX
230 0712 000033 HOLD4:	X8!A2M!AEMJ
231 0714		.AD	JUMP
232 0716 000174 TAB2:	M0!DA
233 0720 000025 5$:	IA!TABJ		;THREE LOW ORDER BITS OF AC SET ?
234 0722		.AD	5$
235 0724 000027		IA!A2M!TABJ
236 0726		.AD	JUMP
237 0730 000026 CUDOWN:	IA!A2M		;INCREMENT SCREEN LINE
238 0732 000154		ZX!DX		;GET CUR-Y
239 0734 000002		M2A
240 0736		.LD	14
241 0740 000045		IA2!ALMJ	;INCREMENT IT
242 0742		.AD	CRTN3
243 0744 000131		M1!TRUJ
244 0746		.AD	ESCA2
245 0750 000022 ESS:	A2M		;INCREMENT EOS-COUNTER

246 0752 000154		ZX!DZ		;GET EOS LINE
247 0754 000006		DXDY!M2A
248 0756		.LD	14
249 0760 000045		IA2!ALMJ	;INCREMENT IT
250 0762		.AD	5$
251 0764 000110		ZA
252 0766 000022 5$:	A2M
253 0770 000142		M2B		;LOAD LINE TO BE ERASED IN MABY
254 0772 000040 ERASL2:	B2Y		;GET LINE TO BE ERASED
255 0774		.LD	117
256 0776 000002		M2A		;GET RIGHT MARGIN
257 1000 000144		DX
258 1002 000073 5$:	IX!L40M!ADXJ	;LOOP WHILE ERASING LINE
259 1004		.AD	5$
260 1006 000016		ZXZY!DXDY!M2A	;GET SCAN COUNT
261 1010 000026		IA!A2M
262 1012 000027 VIDW:	IA!A2M!AEMJ	;INCREMENT IT TWICE
263 1014		.AD	VID
264 1016 000170 SHIFTL:	M0		;GET IN MODE 0
265 1020 000252 .WORD	252,300,242,337,335,243,245,276,272,241,250,253,251
    1022 000300
    1024 000242
    1026 000337
    1030 000335
    1032 000243
    1034 000245
    1036 000276
    1040 000272
    1042 000241
    1044 000250
    1046 000253
    1050 000251
266 1052 000244 .WORD	244,336,274,246,277
    1054 000336
    1056 000274

    1060 000246
    1062 000277
267 1064 000121		TRUJ
268 1066		.AD	XMT
269 1070 000104 TOP2:	DY		;GET TOP LINE
270 1072 000002		M2A
271 1074 000074		IX!IY		;GET VIDEO LINE
272 1076 000022		A2M		;GET THEM EQUAL
273 1100 000016 KEYBO:	ZXZY!DXDY!M2A	;GET KEYBOARD COUNT
274 1102 000165 5$:	DA!KEYJ		;IS THE KEY UP ?
275 1104		.AD	5$
276 1106 000022		A2M		;SAVE ADDRESS
277 1110 000111		ZA!AEM2J	;IS IT ZERO?
278 1112		.AD	FINISH
279 1114 000002		M2A
280 1116 000144		DX
281 1120 000004		DXDY		;GET BUFFER
282 1122 000032		X8!A2M		;STORE IN SCRATCH LOCATION
283 1124 000064		IY
284 1126 000022		A2M		;STORE IN BOTH SCRATCH LOCATIONS
285 1130 000031		X8!AEMJ		;ALREADY TRANSMITTED ?
286 1132		.AD	KEYBO
287 1134 000105		DY!AEM2J
288 1136		.AD	KEYBO
289 1140 000111		ZA!AEM2J	;IS THIS BUFFER AVAILABLE ?
290 1142		.AD	KEYST
291 1144 000064		IY
292 1146 000041		ALMJ		;BOTH BUFFERS FULL ?
293 1150		.AD	FINISH
294 1152 000030 KEYST:	X8
295 1154 000002		M2A		;GET KEY
296 1156 000161		KEYJ		;CHECK KEY AGAIN
297 1160		.AD	FINISH
298 1162 000032		X8!A2M		;STORE IT
299 1164 000034		X8!IA
300 1166		.LD	67

301 1170 000025		IA!AEMJ
302 1172		.AD	PAGE
303 1174 000002		M2A
304 1176 000161		KEYJ		;IS SHIFT KEY DOWN ?
305 1200		.AD	UNSHL	;NO-DO UNSHIFTED LIST
306 1202		.LD	42	;LOAD LIMIT FOR SINGLE MEANING KEY
307 1204 000002		M2A
308 1206 000014 UNSHL:	ZXZY!DXDY
309 1210 000041		ALMJ		;IS KEY IN SHIFTED RANGE ?
310 1212		.AD	SHIFTL	;YET-USE SHIFTED LIST
311 1214 000170		M0		;GET IN MODE 0
312 1216 000110		ZA
313 1220 000331 .WORD	331,311,240,303,301,215,233,307,312,302,326,327,332
    1222 000311
    1224 000240
    1226 000303
    1230 000301
    1232 000215
    1234 000233
    1236 000307
    1240 000312
    1242 000302
    1244 000326
    1246 000327
    1250 000332
314 1252 000377 .WORD	377,211,316,315,306,305,323,330,210,321,324,325,314
    1254 000211
    1256 000316
    1260 000315
    1262 000306
    1264 000305
    1266 000323
    1270 000330
    1272 000210
    1274 000321
    1276 000324

    1300 000325
    1302 000314
315 1304 000317 .WORD	317,304,320,212,334,310,313,322,270,262,247,255,333
    1306 000304
    1310 000320
    1312 000212
    1314 000334
    1316 000310
    1320 000313
    1322 000322
    1324 000270
    1326 000262
    1330 000247
    1332 000255
    1334 000333
316 1336 000263 .WORD	263,265,256,273,261,271,275,260,264,266,254,267,257
    1340 000265
    1342 000256
    1344 000273
    1346 000261
    1350 000271
    1352 000275
    1354 000260
    1356 000264
    1360 000266
    1362 000254
    1364 000267
    1366 000257
317 1370 000043 XMT:	M2U!KCLJ	;TRANSMIT CODE AND CHECK CLICK-JUMPER
318 1372		.AD	CLIKSK
319 1374 000060		CBFF
320 1376 000130 CLIKSK:	M1
321 1400		.LD	110	;RIGHT MARGIN
322 1402 000002		M2A		;GET CUR-X
323 1404 000104		DY
324 1406 000105		DY!AEM2J

325 1410		.AD	BELLA	;RING BELL IF IN RIGHT MARGIN
326 1412 000014 FINISH:	ZXZY!DXDY
327 1414 000144		DX
328 1416 000111		ZA!AEM2J	;IS BELL FF SET ?
329 1420		.AD	FIN
330 1422 000002		M2A
331 1424 000164		DA		;DECREMENT BELL COUNT
332 1426 000023		A2M!AEMJ
333 1430		.AD	RING
334 1432 000014 PAGE:	ZXZY!DXDY
335 1434 000060		CBFF		;SPARE INSTRUCTION
336 1436 000004		DXDY
337 1440 000004		DXDY
338 1442 000161		KEYJ		;IS SHIFT KEY DOWN ?
339 1444		.AD	CONTI
340 1446		.LD	13
341 1450 000002 CONTI:	M2A
342 1452 000027		IA!A2M!AEMJ	;INCREMENT SCROLL COUNT
343 1454		.AD	FINISH
344 1456 000022 PAINT:	A2M
345 1460 000146		DX!M2B		;GET VIDEO LINE
346 1462 000002		M2A
347 1464 000154		ZX!DX
348 1466 000105		DY!AEM2J	;IS THIS THE CUROR LINE?
349 1470		.AD	CURSOR	;YES-CHECK BLINKING RATE
350 1472 000110 FAKE:	ZA
351 1474 000165		DA!KEYJ
352 1476		.AD PAINT2
353 1500 000050 CURSOR:	IXDY		;GET FRAME COUNT
354 1502 000002		M2A
355 1504 000045		IA2!ALMJ
356 1506		.AD	FLASH	;TIME TO FLASH CURSOR?
357 1510 000023		A2M!AEMJ	;NO-INCREMENT COUNT
358 1512		.AD	FAKE
359 1514	FLASH:	.LD	160
360 1516 000154		ZX!DZ

361 1520 000002		M2A		;GET CUR-X
362 1522 000014 PAINT2:	ZXZY!DXDY
363 1524		.LD	17	;RESET SCAN COUNT
364 1526 000032		X8!A2M		;LOAD CURSOR FLIP-FLOP
365 1530 000010		ZXZY
366 1532 000050		IXDY		;GET VIDEO LINE
367 1534 000002		M2A
368 1536		.LD	14
369 1540 000045		IA2!ALMJ	;INCREMENT IT
370 1542		.AD	PAINT3
371 1544 000110		ZA
372 1546 000022 PAINT3:	A2M
373 1550 000150		ZX		;START AT BEGINNING OF LINE
374 1552 000040		B2Y
375 1554 000141 5$:	VSCJ
376 1556		.AD	5$	;WAIT FOR END OF SCAN FLAG
377 1560 000016		ZXZY!DXDY!M2A
378 1562 000020		SVID		;TURN ON VIDEO
379 1564		.LD	30
380 1566 000045		IA2!ALMJ	;INCREMENT SCAN COUNT AN COMPARE
381 1570		.AD	PAINT3
382 1572 000026		IA!A2M		;GET PROPER COUNT
383 1574 000030		X8
384 1576 000002		M2A
385 1600 000000		SCFF		;TURN ON CURSOR
386 1602 000150		ZX
387 1604 000141 VID:	VSCJ
388 1606		.AD	VID
389 1610 000100		ZCAV		;TURN OFF CURSOR AND VIDEO
390 1612 000016		ZXZY!DXDY!M2A	;GET SCAN COUNT
391 1614		.LD	40
392 1616 000041		ALMJ		;TIME FOR ANOTHER UART CHECK ?
393 1620		.AD	UARTJ
394 1622		.LD	42
395 1624 000041		ALMJ		;TIME FOR NEXT LINE ?
396 1626		.AD	VIDW	;NO-WAIT A SCAN

397 1630 000102		M2X
398 1632 000002		M2A		;GET LINE COUNT
399 1634		.LD	15
400 1636 000025		IA!AEMJ		;CHECK FOR 50/60 HZ COMPENSATION
401 1640		.AD	EXTRA
402 1642 000041		ALMJ		;MORE LINES TO PAINT ?
403 1644		.AD	PAINT
404 1646	TOPROU: .LD	0
405 1650 000014		ZXZY!DXDY
406 1652		.LD	66	;GET READY TO SCAN KEYBOARD
407 1654 000144		DX
408 1656 000006		DXDY!M2A	;GET KEYBOARD BUFFER
409 1660 000161		KEYJ		;KEY STILL DOWN
410 1662		.AD	TOPROU	;CLEAR IT IF KEY IS UP
411 1664 000064		IY		;GET NEXT BUFFER
412 1666 000002		M2A
413 1670 000161		KEYJ
414 1672		.AD	TOPROU
415 1674 000170		M0		;GET IN MODE 0
416 1676 000151		ZX!UTJ		;IS U-TRANSMITTER READY ?
417 1700		.AD	FIN	;NO-SKIP KEYBOARD CHECK
418 1702 000130		M1
419 1704 000111		ZA!AEM2J	;ALL DONE ?
420 1706		.AD	TOP2	;YES-CONTINUE
421 1710 000002		M2A
422 1712		.LD	57	;CHECK IDENTIFIER
423 1714 000041		ALMJ
424 1716		.AD	IDE
425 1720		.LD	101
426 1722 000021		AEMJ
427 1724		.AD	TOPROU
428 1726 000041		ALMJ
429 1730		.AD	IDE
430 1732		.LD	33
431 1734 000042	IDE:	M2U
432 1736 000131		M1!TRUJ
